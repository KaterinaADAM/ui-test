package org.exoplatform.selenium.cloud.features;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.cloud.CloudBase;
import org.exoplatform.selenium.platform.HomePageActivity;
import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.NavigationToolbar;
import org.openqa.selenium.By;
import org.testng.annotations.*;


/**
 * @author phuongdt
 *
 */
public class Cloud_Features_NewUserActivity extends CloudBase{
	ManageAccount magAccount;
	NavigationToolbar navBar;
	HomePageActivity hpActivity;

	@BeforeMethod
	public void beforeMethods() {
		initSeleniumTest();
		driver.get(baseUrl);
		driver.manage().window().maximize();
		magAccount = new ManageAccount(driver);
		navBar = new NavigationToolbar(driver);
		hpActivity = new HomePageActivity(driver);
		magAccount.signIn("root", "12345");
	}

	@AfterMethod
	public void afterMethods() {
		driver.quit();
	}

	/**
	 * Case ID:94275.
	 * Test Case Name: Activity should be displayed when user joins the workspace.
	 * Case ID:94276.
	 * Test Case Name: Actions should be displayed for new Activity.
	 * Case ID:94280.
	 * Test Case Name: Avatar should be displayed for new Activity.
	 * Case ID:94281.
	 * Test Case Name: A bubble should be displayed for new Activity.
	 * Case ID:94282.
	 * Test Case Name: Activity should be displayed when user himself joins the workspace.
	 * Case ID:94283.
	 * Test Case Name: Actions should be displayed when user himself joins the workspace.
	 * Pre-Condition: User A, sign in the workspace
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by phuongdt at 2014/02/06 09:11:58
	 */
	@Test
	public  void test01_02_06_07_08_09_ActivityShouldBeDisplayedWhenUserJoinsTheWorkspace() {
		String username = getRandomString();
		String password = username;
		String firstName = username;
		String lastName = username;
		String displayName;
		displayName = username + " " + username;
		String email = username+"@gmail.com";
		String tenant = baseUrl.substring(baseUrl.indexOf("//")+2,baseUrl.indexOf("."));
		String message = username + " " + username + " has joined the "+tenant+ " social intranet";
		String shelfMessage = "You have joined the "+tenant+ " social intranet";
		
		info("Test 1: Activity should be displayed when user joins the workspace");
		/*Step Number: 1
		 *Step Name: 
		 *Step Description: 
			- Connect to CW with the User A
		 *Input Data: 
		 *Expected Outcome: 
			- Intranet homepage is displayed*/
		/*Step number: 2
		 *Step Name: 
		 *Step Description: 
			- Sign up to the workspace with the User B
		 *Input Data: 
		 *Expected Outcome: 
			- The User B is memeber of the workspace*/
		navBar.goToNewStaff();                
		//Publisher
		magAccount.addNewUserAccount(username, password, password, firstName, lastName, displayName, email, null, null, true);
		
		/*Step number: 3 (Case ID:94275.)
		 *Step Name: 
		 *Step Description: 
			- Connect with User A
		 *Input Data: 

		 *Expected Outcome: 
			- A new activity is added to the activity stream of the User A
			- The message should be of the form "$firstname $lastname has joined the $tenantname social intranet."*/
		navBar.goToHomePage();
		info(message);
		info(waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_CONTENT_INDEX.replace("${index}", "2")).getText());
		assert waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_CONTENT_INDEX.replace("${index}", "2")).getText().contains(message);
		
		info("Test 2: Actions should be displayed for new Activity");
		/*Step number: 3 (Case ID:94276.)
		 *Step Name: 
		 *Step Description: 
			- Connect with User A
		 *Input Data: 

		 *Expected Outcome: 
			- A new activity is added to the activity stream of the User A
			- Actions: "Comment | Like | Connect to $firstname". are displayed*/ 
		waitForAndGetElement(hpActivity.ELEMENT_LIKE_ICON.replace("${activityText}", username));
		waitForAndGetElement(hpActivity.ELEMENT_COMMENT_LINK.replace("${activityText}", username));
		//Connect to $firstname". are displayed: pending (Refer https://jira.exoplatform.org/browse/CLDINT-1227)
		
		info("Test 6: Avatar should be displayed for new Activity");
		/*Step number: 3 (Case ID:94280.)
		 *Step Name: 
		 *Step Description: 
			- Connect with User A
		 *Input Data: 

		 *Expected Outcome: 
			- A new activity is added to the activity stream of the User A
			- Avatar of the User B is displayed on the activity*/ 
		waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_AUTHOR_AVATAR.replace("${index}", "1").replace("${author}", displayName));
		String src1 = waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_AUTHOR_AVATAR.replace("${index}", "1").replace("${author}", displayName)).getAttribute("src");
		
		info("Test 7: A bubble should be displayed for new Activity");
		/*Step number: 4 (Case ID:94281.)
		 *Step Name: 
		 *Step Description: 
			- Move the mouse over the avatar of the User B
		 *Input Data: 

		 *Expected Outcome: 
			- A small icon displays the bubble with a regular status update*/ 
		mouseOver(hpActivity.ELEMENT_ACTIVITY_AUTHOR_AVATAR.replace("${index}", "1").replace("${author}", displayName),true);
		String src2 = waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_AUTHOR_AVATAR_BUBBLE.replace("${index}", "1")).getAttribute("src");
		info(src1);
		info(src2);
		assert src1.equalsIgnoreCase(src2);
		
		String user = waitForAndGetElement(hpActivity.ELEMENT_ACTIVITY_AUTHOR_BUBBLE.replace("${index}", "2")).getText();
		info(user);
		info(displayName);
		assert user.equalsIgnoreCase(username+" "+username);
		
		info("Test 8: Activity should be displayed when user himself joins the workspace");
		/*Step Number: 1 (Case ID:94282.)
		 *Step Name: 
		 *Step Description: 
			- Connect to CW with the User A
		 *Input Data: 

		 *Expected Outcome: 
			- Intranet homepage is displayed
			- An activity is displayed with a message: "You have joined the $tenantname social intranet.*/
		magAccount.signOut();
		magAccount.signIn(username, username);
		info(shelfMessage);
		info(waitForAndGetElement(By.xpath("//div[2][contains(@id,'activityContainer')]//div[@class='text']")).getText());
		assert waitForAndGetElement(By.xpath("//div[2][contains(@id,'activityContainer')]//div[@class='text']")).getText().contains(shelfMessage);
		
		info("Test 9: Actions should be displayed when user himself joins the workspace");
		/*Step Number: 1 (Case ID:94283.)
		 *Step Name: 
		 *Step Description: 
			- Connect to CW with the User A
		 *Input Data: 

		 *Expected Outcome: 
			- Intranet homepage is displayed
			- Activity is displayed with actions: "Comment | Like".*/ 
		waitForAndGetElement(hpActivity.ELEMENT_LIKE_ICON.replace("${activityText}", shelfMessage));
		waitForAndGetElement(hpActivity.ELEMENT_ICON_COMMENT.replace("${title}", shelfMessage));
	}

	/**
	 * Case ID:94277.
	 * Test Case Name: Connect action should be updated to "Cancel Connection Request".
	 * 
	 * Case ID:94279.
	 * Test Case Name: Connect action should be updated "Accept Connection Request".
	 * 
	 * Case ID:94278.
	 * Test Case Name: "Cancel Connection Request" action should be removed.
	 * Pre-Condition: User A, sign in the workspace
	 * Post-Condition: 
	 * Done with OSs and browsers : 
	 * Generated by phuongdt at 2014/02/06 09:11:58
	 * PENDING: Refer https://jira.exoplatform.org/browse/CLDINT-1227
	 */
	@Test
	public  void test03_04_05_ConnectActionShouldBeUpdatedToCancelConnectionRequest() {
		String username1 = getRandomString();
		String password1 = username1;
		String firstName1 = username1;
		String lastName1 = username1;
		String displayName1;
		displayName1 = username1 + " " + username1;
		String email1 = username1+"@gmail.com";

		String username2 = getRandomString();
		String password2 = username2;
		String firstName2 = username2;
		String lastName2 = username2;
		String displayName2;
		displayName2 = username2 + " " + username2;
		String email2 = username2+"@gmail.com";
		
		navBar.goToNewStaff();                
		//Publisher
		magAccount.addNewUserAccount(username1, password1, password1, firstName1, lastName1, displayName1, email1, null, null, true);
		magAccount.addNewUserAccount(username2, password2, password2, firstName2, lastName2, displayName2, email2, null, null, true);
		
		info("Test 3: Connect action should be updated to Cancel Connection Request");
		/*Step Number: 1
		 *Step Name: 
		 *Step Description: 
			- Connect to CW with the User A
		 *Input Data: 

		 *Expected Outcome: 
			- Intranet homepage is displayed*/
		magAccount.signOut();
		magAccount.signIn(username1, password1);

		/*Step number: 2
		 *Step Name: 
		 *Step Description: 
			- Sign in to the workspace with the User B
		 *Input Data: 

		 *Expected Outcome: 
			- The User B is memeber of the workspace*/
		magAccount.signOut();
		magAccount.signIn(username2, password2);

		/*Step number: 3
		 *Step Name: 
		 *Step Description: 
			- Connect with User A
		 *Input Data: 

		 *Expected Outcome: 
			- A new activity is added to the activity stream of the User A
			- Actions "Comment | Like | Connect to $firstname". are displayed*/
		waitForAndGetElement(hpActivity.ELEMENT_LIKE_ICON.replace("${activityText}", displayName1));
		waitForAndGetElement(hpActivity.ELEMENT_COMMENT_LINK.replace("${activityText}", displayName1));
		waitForAndGetElement(hpActivity.ELEMENT_CONNECT_LINK_TEXT.replace("${activityText}", displayName1).replace("${name}", displayName1));

		/*Step number: 4
		 *Step Name: 
		 *Step Description: 
			- Click on the action link "Connect "
		 *Input Data: 

		 *Expected Outcome: 
			- The actions change to "Comment | Like | Cancel Connection Request"*/ 
		click(hpActivity.ELEMENT_CONNECT_LINK.replace("${activityText}", displayName1));
		waitForAndGetElement(hpActivity.ELEMENT_CANCEL_CONNECT_LINK_TEXT.replace("${activityText}", displayName1));
		
		info("Test 5: Connect action should be updated Accept Connection Request");
		/*Step number: 4
		 *Step Name: 
		 *Step Description: 
			- Connect with the User B
			- Accept invitation of the User A to connect
		 *Input Data: 

		 *Expected Outcome: 
			- User A and User B are connected*/
		magAccount.signOut();
		magAccount.signIn(username1, password1);
		click(hpActivity.ELEMENT_ACCEPT_CONNECT_LINK.replace("${activityText}", displayName2));
		waitForAndGetElement(hpActivity.ELEMENT_LIKE_ICON.replace("${activityText}", displayName2));
		waitForAndGetElement(hpActivity.ELEMENT_COMMENT_LINK.replace("${activityText}", displayName2));
		waitForElementNotPresent(hpActivity.ELEMENT_ACCEPT_CONNECT_LINK_TEXT.replace("${activityText}", displayName2));
		waitForElementNotPresent(hpActivity.ELEMENT_CANCEL_CONNECT_LINK_TEXT.replace("${activityText}", displayName2));
		waitForElementNotPresent(hpActivity.ELEMENT_CONNECT_LINK_TEXT.replace("${activityText}", displayName2).replace("${name}", displayName2));

		info("Test 4: Cancel Connection Request action should be removed");
		/*Step number: 5
		 *Step Name: 
		 *Step Description: 
			- Connect with User A
		 *Input Data: 

		 *Expected Outcome: 
			- Actions in activity change to "Comment | Like"*/ 
		magAccount.signOut();
		magAccount.signIn(username2, password2);
		waitForAndGetElement(hpActivity.ELEMENT_LIKE_ICON.replace("${activityText}", displayName1));
		waitForAndGetElement(hpActivity.ELEMENT_COMMENT_LINK.replace("${activityText}", displayName1));
		waitForElementNotPresent(hpActivity.ELEMENT_CANCEL_CONNECT_LINK.replace("${activityText}", displayName1));
		waitForElementNotPresent(hpActivity.ELEMENT_CONNECT_LINK_TEXT.replace("${activityText}", displayName1).replace("${name}", displayName1));

	}
}